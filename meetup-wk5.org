#+TITLE: Arduino

* Arduino Basics

- Tutorial Foundations :: https://www.arduino.cc/en/Tutorial/Foundations
- Language Reference :: https://www.arduino.cc/en/Reference/HomePage

Similar to Processing language [[http://arduino.cc/][Arduino]] has two main structures, a =void setup()= and a =void loop()=.  In contrast to processing which uses =frameRate()= function to update the =void loop()= function, Arduino's "framerate" depends on the program that you have uploaded to your board (see online topic [[http://forum.arduino.cc/index.php?topic=42695.0][here]]).

Similar to Processing's window =size()= function, in Arduino's =void setup()= you have to define =Serial.begin()=, which is the speed in bits per second (or baud), that your board is communicating with your computer.

** Analog and digital pins

An Arduino has both [[https://www.arduino.cc/en/Tutorial/AnalogInputPins][analog]] and [[https://www.arduino.cc/en/Tutorial/DigitalPins][digital]] pins.  A standard Arduino board, like UNO, Duemilanove etc, has *6 analog inputs* and *14 digital inputs/outputs*.

=pinMode()= function is used to declare if a pin is an input or an output.  By default Arduino's (Atmega) pins have been set to inputs.  If a pin is defined as INPUT a good value for *pullup* and *pulldown* resistor is *10KΩ*.  Pin 13 has an LED and a resistor on board, which makes it harder to be handle as an input.

*Output pins* may provide up to *40mA* of current, which is enough for LEDs and ICs, but not enough for relays and motors.  Typical resistor values that should be used to output pins in order to protect your board are 470Ω and 1kΩ.

Analog input pins use a 10 bit resolution (0-1023 integers), and they can be used as digital pins as well (GPIO).  To do so you have to map analog pins using the aliases =A0= for analog pin 0 (A1 for pin 1 and so forth).

#+BEGIN_SRC java
pinMode(A0, OUTPUT);
digitalWrite(A0, HIGH); // set pullup on analog pin 0
#+END_SRC

- WARNING :: By turning on a pullup will affect the values reported by =analogRead()=.


** Capacitive sensor
- http://playground.arduino.cc/Code/CapacitiveSensor

** RCtime
https://www.arduino.cc/en/Tutorial/RCtime
